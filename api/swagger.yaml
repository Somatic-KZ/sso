basePath: /sso/api/v1
definitions:
  api.NewJWTTokenResponse:
    properties:
      access_token:
        type: string
      refresh_token:
        type: string
      status:
        type: string
    type: object
  api.ProfileResponse:
    properties:
      birth_date:
        type: string
      created:
        type: string
      email:
        type: string
      firstname:
        type: string
      iin:
        type: integer
      lang:
        type: string
      lastname:
        type: string
      patronymic:
        type: string
      permissions:
        items:
          type: string
        type: array
      phone:
        type: string
      phones:
        items:
          type: string
        type: array
      receivers:
        items:
          $ref: '#/definitions/models.Receiver'
        type: array
      roles:
        items:
          type: string
        type: array
      sex:
        type: string
      tdid:
        type: string
      updated:
        type: string
    type: object
  api.ProfileUpdateRequest:
    properties:
      birth_date:
        type: string
      email:
        type: string
      firstname:
        type: string
      iin:
        type: integer
      lang:
        type: string
      lastname:
        type: string
      patronymic:
        type: string
      sex:
        type: string
    type: object
  api.RefreshRequest:
    properties:
      refresh_token:
        type: string
    type: object
  api.SignInByEmailRequest:
    properties:
      email:
        type: string
      password:
        type: string
    type: object
  api.SignUPRequest:
    properties:
      apartment:
        type: string
      birth_date:
        type: string
      city:
        type: string
      corpus:
        type: string
      email:
        type: string
      firstname:
        type: string
      house:
        type: string
      iin:
        type: integer
      lang:
        type: string
      lastname:
        type: string
      password:
        type: string
      patronymic:
        type: string
      phone:
        type: string
      region:
        type: string
      sex:
        type: string
      street:
        type: string
      zipcode:
        type: integer
    required:
    - email
    - password
    - phone
    type: object
  api.SignUPResponse:
    properties:
      status:
        type: string
      tdid:
        type: string
    type: object
  api.UpdatePasswordRequest:
    properties:
      password:
        type: string
    required:
    - password
    type: object
  models.AddressGeo:
    properties:
      lat:
        type: string
      lng:
        type: string
    type: object
  models.ErrorDetails:
    properties:
      code:
        description: application-определенный код ошибки
        type: integer
      message:
        description: application-level сообщение, для дебага
        type: string
      status:
        description: сообщение пользовательского уровня
        type: string
    type: object
  models.ErrorResponse:
    properties:
      error:
        $ref: '#/definitions/models.ErrorDetails'
      validation:
        additionalProperties:
          type: string
        description: ошибки валидации
        type: object
    type: object
  models.Organization:
    properties:
      address:
        type: string
      bik:
        type: string
      bin:
        type: string
      iic:
        type: string
      name:
        type: string
    type: object
  models.Receiver:
    properties:
      additionalPhone:
        type: string
      address:
        $ref: '#/definitions/models.ReceiverAddress'
      email:
        type: string
      firstname:
        type: string
      id:
        type: string
      isDefault:
        type: boolean
      isOrganization:
        type: boolean
      lastname:
        type: string
      organization:
        $ref: '#/definitions/models.Organization'
      phone:
        type: string
    type: object
  models.ReceiverAddress:
    properties:
      apartment:
        type: string
      city:
        type: string
      floor:
        type: string
      geo:
        $ref: '#/definitions/models.AddressGeo'
      house:
        type: string
      region:
        $ref: '#/definitions/models.ReceiverRegion'
      street:
        type: string
      zipcode:
        type: string
    type: object
  models.ReceiverAddressResponse:
    properties:
      apartment:
        type: string
      city:
        type: string
      floor:
        type: string
      geo:
        $ref: '#/definitions/models.AddressGeo'
      house:
        type: string
      id:
        type: string
      region:
        $ref: '#/definitions/models.ReceiverRegion'
      street:
        type: string
      zipcode:
        type: string
    type: object
  models.ReceiverRegion:
    properties:
      code:
        type: string
      id:
        type: integer
      name:
        type: string
    type: object
  models.ReceiverResponse:
    properties:
      additionalPhone:
        type: string
      email:
        type: string
      firstname:
        type: string
      id:
        type: string
      isDefault:
        type: boolean
      isOrganization:
        type: boolean
      lastname:
        type: string
      organization:
        $ref: '#/definitions/models.Organization'
      phone:
        type: string
    type: object
  v1.AddressesResponse:
    properties:
      addresses:
        items:
          $ref: '#/definitions/models.ReceiverAddressResponse'
        type: array
    type: object
  v1.ReceiversRequest:
    properties:
      receivers:
        items:
          $ref: '#/definitions/models.ReceiverResponse'
        type: array
    type: object
  v1.ResetRecoveryRequest:
    properties:
      phone:
        type: string
    required:
    - phone
    type: object
  v1.ResetVerifyRequest:
    properties:
      phone:
        type: string
    required:
    - phone
    type: object
info:
  contact: {}
  description: API для работы с SSO
  title: SSO API
  version: "1.0"
paths:
  /auth/recovery/reset:
    put:
      consumes:
      - application/json
      description: Снимает штрафы по восстановлению
      parameters:
      - description: Данные для снятия штрафов по восстановлению
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/v1.ResetRecoveryRequest'
      produces:
      - application/json
      responses:
        "200":
          description: ""
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Очищение объекта восстановления
      tags:
      - recovery
  /auth/refresh:
    post:
      consumes:
      - application/json
      description: Обновляет время жизни токена
      parameters:
      - description: Необходимые данные для обновления токена
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/api.RefreshRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.NewJWTTokenResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Рефреш токена
      tags:
      - auth
  /auth/signin/email:
    post:
      consumes:
      - application/json
      description: Проверяет пользовательский email и пароль, выписывает JWT токен
      parameters:
      - description: Необходимые данные для аутентификации
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/api.SignInByEmailRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.NewJWTTokenResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Вход по email
      tags:
      - auth
  /auth/signout:
    delete:
      description: Успешный вызов удаляет представленный token в cookie.
      produces:
      - application/json
      responses:
        "200":
          description: ""
      security:
      - JWT: []
      summary: Завершает сессию пользователя, удаляя JWT токен.
      tags:
      - auth
  /auth/signup:
    put:
      consumes:
      - application/json
      description: Создает нового пользователя в SSO
      parameters:
      - description: Необходимые данные для регистрации
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/api.SignUPRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.SignUPResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Регистрация
      tags:
      - auth
  /auth/verify/reset:
    put:
      consumes:
      - application/json
      description: Снимает штрафы по верификации
      parameters:
      - description: Данные для снятия штрафов
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/v1.ResetVerifyRequest'
      produces:
      - application/json
      responses:
        "200":
          description: ""
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Очищение объекта верификации
      tags:
      - verify
  /profile:
    get:
      description: Позволяет пользователю получить информацию о своем аккаунте со
        всеми правами и ролями
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.ProfileResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - JWT: []
      summary: Профиль
      tags:
      - profile
    put:
      consumes:
      - application/json
      description: Позволяет обновить данные по своему профилю
      parameters:
      - description: Обновленные данные профиля
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/api.ProfileUpdateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: ""
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - JWT: []
      summary: Изменение профиля
      tags:
      - profile
  /profile/addresses:
    get:
      description: Позволяет получить информацию об адресах всех получателей привязанных
        к пользователю
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.AddressesResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - JWT: []
      tags:
      - profile
  /profile/password:
    put:
      consumes:
      - application/json
      description: Позволяет обновить пользователю пароль
      parameters:
      - description: Новый пароль
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/api.UpdatePasswordRequest'
      produces:
      - application/json
      responses:
        "200":
          description: ""
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - JWT: []
      summary: Смена пароля
      tags:
      - profile
  /profile/receivers:
    get:
      description: Позволяет получить информацию(кроме адреса) обо всех получателях
        привязанных к пользователю
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.ReceiversRequest'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - JWT: []
      tags:
      - profile
securityDefinitions:
  JWT:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
