definitions:
  api.AddPhoneRequest:
    properties:
      phone:
        type: string
    type: object
  api.AddReceiverRequest:
    properties:
      additionalPhone:
        type: string
      address:
        $ref: '#/definitions/models.ReceiverAddress'
      email:
        type: string
      firstname:
        type: string
      isDefault:
        type: boolean
      isOrganization:
        type: boolean
      lastname:
        type: string
      organization:
        $ref: '#/definitions/models.Organization'
      phone:
        type: string
    required:
    - email
    - firstname
    - lastname
    - phone
    type: object
  api.AddReceiverResponse:
    properties:
      id:
        type: string
    type: object
  api.DelegateTokenRequest:
    properties:
      phone:
        description: Номер телефона покупателя
        type: string
    required:
    - phone
    type: object
  api.NewDelegateJWTTokenResponse:
    properties:
      delegate_token:
        description: Делегирующий токен
        type: string
      status:
        description: Статус операции получения токена
        type: string
    type: object
  api.NewJWTTokenResponse:
    properties:
      access_token:
        type: string
      refresh_token:
        type: string
      status:
        type: string
    type: object
  api.ProfileResponse:
    properties:
      birth_date:
        type: string
      created:
        type: string
      email:
        type: string
      firstname:
        type: string
      iin:
        type: integer
      lang:
        type: string
      lastname:
        type: string
      patronymic:
        type: string
      permissions:
        items:
          type: string
        type: array
      phone:
        type: string
      phones:
        items:
          type: string
        type: array
      receivers:
        items:
          $ref: '#/definitions/models.Receiver'
        type: array
      roles:
        items:
          type: string
        type: array
      sex:
        type: string
      tdid:
        type: string
      updated:
        type: string
    type: object
  api.ProfileTypeRequest:
    properties:
      phone:
        type: string
    required:
    - phone
    type: object
  api.ProfileTypeResponse:
    properties:
      type:
        type: string
    type: object
  api.ProfileUpdateRequest:
    properties:
      birth_date:
        type: string
      email:
        type: string
      firstname:
        type: string
      iin:
        type: integer
      lang:
        type: string
      lastname:
        type: string
      patronymic:
        type: string
      sex:
        type: string
    type: object
  api.RecoveryByPhoneNewPasswordRequest:
    properties:
      password:
        type: string
      phone:
        type: string
      token:
        type: string
    required:
    - phone
    type: object
  api.RecoveryByPhoneRequest:
    properties:
      phone:
        type: string
    required:
    - phone
    type: object
  api.RecoveryByPhoneValidateRequest:
    properties:
      phone:
        type: string
      token:
        type: string
    required:
    - phone
    type: object
  api.RefreshRequest:
    properties:
      refresh_token:
        type: string
    type: object
  api.SignInByEmailRequest:
    properties:
      email:
        type: string
      password:
        type: string
    type: object
  api.SignInByPhoneRequest:
    properties:
      password:
        type: string
      phone:
        type: string
    required:
    - password
    - phone
    type: object
  api.SignInDelegateTokenRequest:
    properties:
      merchant_id:
        description: ID продавца
        type: string
      otp:
        description: Одноразовый код из SMS
        type: string
      phone:
        description: Номер телефона покупателя
        type: string
    required:
    - phone
    type: object
  api.SignInFastRequest:
    properties:
      email:
        type: string
      phone:
        type: string
      tdid:
        type: string
    required:
    - email
    - phone
    type: object
  api.SignInFastResponse:
    properties:
      maskedPhone:
        type: string
      status:
        type: string
    type: object
  api.SignInFastTokenRequest:
    properties:
      email:
        type: string
      phone:
        type: string
      tdid:
        type: string
      token:
        type: string
    required:
    - email
    type: object
  api.SignUPFastRequest:
    properties:
      apartment:
        type: string
      birth_date:
        type: string
      city:
        type: string
      corpus:
        type: string
      email:
        type: string
      firstname:
        type: string
      house:
        type: string
      iin:
        type: integer
      lang:
        type: string
      lastname:
        type: string
      patronymic:
        type: string
      phone:
        type: string
      region:
        type: string
      sex:
        type: string
      street:
        type: string
      zipcode:
        type: integer
    required:
    - email
    - phone
    type: object
  api.SignUPRequest:
    properties:
      apartment:
        type: string
      birth_date:
        type: string
      city:
        type: string
      corpus:
        type: string
      email:
        type: string
      firstname:
        type: string
      house:
        type: string
      iin:
        type: integer
      lang:
        type: string
      lastname:
        type: string
      password:
        type: string
      patronymic:
        type: string
      phone:
        type: string
      region:
        type: string
      sex:
        type: string
      street:
        type: string
      zipcode:
        type: integer
    required:
    - email
    - password
    - phone
    type: object
  api.SignUPResponse:
    properties:
      status:
        type: string
      tdid:
        type: string
    type: object
  api.UpdatePasswordRequest:
    properties:
      password:
        type: string
    required:
    - password
    type: object
  api.UpdateReceiverRequest:
    properties:
      additionalPhone:
        type: string
      address:
        $ref: '#/definitions/models.ReceiverAddress'
      email:
        type: string
      firstname:
        type: string
      isDefault:
        type: boolean
      isOrganization:
        type: boolean
      lastname:
        type: string
      organization:
        $ref: '#/definitions/models.Organization'
      phone:
        type: string
    required:
    - email
    - firstname
    - lastname
    - phone
    type: object
  api.VerifyPhoneNumRequest:
    properties:
      phone:
        type: string
      tdid:
        type: string
      token:
        type: string
    type: object
  api.VerifyPhoneRequest:
    properties:
      phone:
        type: string
      tdid:
        type: string
    required:
    - phone
    type: object
  gitea.technodom.kz_intechno_techno-sso_internal_ports_http_resources_auth_v1.ResetRecoveryRequest:
    properties:
      phone:
        type: string
    required:
    - phone
    type: object
  gitea.technodom.kz_intechno_techno-sso_internal_ports_http_resources_auth_v1.ResetVerifyRequest:
    properties:
      phone:
        type: string
    required:
    - phone
    type: object
  gitea.technodom.kz_intechno_techno-sso_internal_ports_http_resources_events_v1.VerifyByTDIDResponse:
    properties:
      phone:
        type: string
      status:
        type: string
      token:
        type: string
    type: object
  gitea.technodom.kz_intechno_techno-sso_internal_ports_http_resources_permissions_v1.AllPermissionsResponse:
    properties:
      permissions:
        $ref: '#/definitions/models.RolePermissions'
    type: object
  gitea.technodom.kz_intechno_techno-sso_internal_ports_http_resources_profile_v1.AddressesResponse:
    properties:
      addresses:
        items:
          $ref: '#/definitions/models.ReceiverAddressResponse'
        type: array
    type: object
  gitea.technodom.kz_intechno_techno-sso_internal_ports_http_resources_profile_v1.ReceiversRequest:
    properties:
      receivers:
        items:
          $ref: '#/definitions/models.ReceiverResponse'
        type: array
    type: object
  internal_ports_http_resources_auth_v1.ResetRecoveryRequest:
    properties:
      phone:
        type: string
    required:
    - phone
    type: object
  internal_ports_http_resources_auth_v1.ResetVerifyRequest:
    properties:
      phone:
        type: string
    required:
    - phone
    type: object
  internal_ports_http_resources_events_v1.VerifyByTDIDResponse:
    properties:
      phone:
        type: string
      status:
        type: string
      token:
        type: string
    type: object
  internal_ports_http_resources_permissions_v1.AllPermissionsResponse:
    properties:
      permissions:
        $ref: '#/definitions/models.RolePermissions'
    type: object
  internal_ports_http_resources_profile_v1.AddressesResponse:
    properties:
      addresses:
        items:
          $ref: '#/definitions/models.ReceiverAddressResponse'
        type: array
    type: object
  internal_ports_http_resources_profile_v1.ReceiversRequest:
    properties:
      receivers:
        items:
          $ref: '#/definitions/models.ReceiverResponse'
        type: array
    type: object
  models.Action:
    properties:
      id:
        type: string
      title:
        type: string
      type:
        type: string
    required:
    - title
    - type
    type: object
  models.AddressGeo:
    properties:
      lat:
        type: string
      lng:
        type: string
    type: object
  models.Device:
    properties:
      id:
        type: string
      os:
        type: string
    required:
    - id
    - os
    type: object
  models.ErrorDetails:
    properties:
      code:
        description: application-определенный код ошибки
        type: integer
      message:
        description: application-level сообщение, для дебага
        type: string
      status:
        description: сообщение пользовательского уровня
        type: string
    type: object
  models.ErrorResponse:
    properties:
      error:
        $ref: '#/definitions/models.ErrorDetails'
      validation:
        additionalProperties:
          type: string
        description: ошибки валидации
        type: object
    type: object
  models.Organization:
    properties:
      address:
        type: string
      bik:
        type: string
      bin:
        type: string
      iic:
        type: string
      name:
        type: string
    type: object
  models.Receiver:
    properties:
      additionalPhone:
        type: string
      address:
        $ref: '#/definitions/models.ReceiverAddress'
      email:
        type: string
      firstname:
        type: string
      id:
        type: string
      isDefault:
        type: boolean
      isOrganization:
        type: boolean
      lastname:
        type: string
      organization:
        $ref: '#/definitions/models.Organization'
      phone:
        type: string
    type: object
  models.ReceiverAddress:
    properties:
      apartment:
        type: string
      city:
        type: string
      floor:
        type: string
      geo:
        $ref: '#/definitions/models.AddressGeo'
      house:
        type: string
      region:
        $ref: '#/definitions/models.ReceiverRegion'
      street:
        type: string
      zipcode:
        type: string
    type: object
  models.ReceiverAddressResponse:
    properties:
      apartment:
        type: string
      city:
        type: string
      floor:
        type: string
      geo:
        $ref: '#/definitions/models.AddressGeo'
      house:
        type: string
      id:
        type: string
      region:
        $ref: '#/definitions/models.ReceiverRegion'
      street:
        type: string
      zipcode:
        type: string
    type: object
  models.ReceiverRegion:
    properties:
      code:
        type: string
      id:
        type: integer
      name:
        type: string
    type: object
  models.ReceiverResponse:
    properties:
      additionalPhone:
        type: string
      email:
        type: string
      firstname:
        type: string
      id:
        type: string
      isDefault:
        type: boolean
      isOrganization:
        type: boolean
      lastname:
        type: string
      organization:
        $ref: '#/definitions/models.Organization'
      phone:
        type: string
    type: object
  models.RolePermissions:
    additionalProperties:
      items:
        type: string
      type: array
    type: object
info:
  contact: {}
paths:
  /actions:
    get:
      description: Отдает список доступных пользователю действий, к которым можно
        привязывать пользовательские события
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Action'
            type: array
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - JWT: []
      summary: Список пользовательских действий
      tags:
      - actions
    post:
      consumes:
      - application/json
      description: Создает пользовательское действие, к которому можно привязывать
        пользовательские события
      parameters:
      - description: Название нового действия
        in: body
        name: title
        required: true
        schema:
          type: string
      - description: Тип нового действия
        in: body
        name: type
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: ""
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - JWT: []
      summary: Создание пользовательского действия
      tags:
      - actions
  /actions/{id}:
    delete:
      description: Удаляет пользовательское действие по ID
      parameters:
      - description: ID действия
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ""
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - JWT: []
      summary: Удаление пользовательского действия
      tags:
      - actions
    get:
      description: Отдает пользовательское действие по ID, к которому можно привязывать
        пользовательские события
      parameters:
      - description: ID действия
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Action'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - JWT: []
      summary: Пользовательское действие по ID
      tags:
      - actions
    put:
      consumes:
      - application/json
      description: Тип пользовательского действия уникален
      parameters:
      - description: ID действия
        in: path
        name: id
        required: true
        type: string
      - description: Название нового действия
        in: body
        name: title
        required: true
        schema:
          type: string
      - description: Тип нового действия
        in: body
        name: type
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: ""
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - JWT: []
      summary: Обновление пользовательского действия
      tags:
      - actions
  /auth/recovery/phone:
    put:
      consumes:
      - application/json
      description: Запускает процедуру восстановления пароля по номеру телефона
      parameters:
      - description: Необходимые данные для восстановления
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/api.RecoveryByPhoneRequest'
      produces:
      - application/json
      responses:
        "200":
          description: ""
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "429":
          description: Too Many Requests
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Восстановление пароля
      tags:
      - recovery
  /auth/recovery/phone/password:
    put:
      consumes:
      - application/json
      description: Точка смены пароля и валидации токена восстановления, пришедшего
        на номер телефона пользователя. А также выдача нового токена доступа.
      parameters:
      - description: Необходимые данные для подтверждения токена и смены пароля
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/api.RecoveryByPhoneNewPasswordRequest'
      produces:
      - application/json
      responses:
        "200":
          description: ""
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Смена пароля
      tags:
      - recovery
  /auth/recovery/phone/token:
    put:
      consumes:
      - application/json
      description: Точка валидации токена восстановления, пришедшего на номер телефона
        пользователя. Позволяет понять верный ли токен вводит пользователь.
      parameters:
      - description: Необходимые данные для подтверждения токена
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/api.RecoveryByPhoneValidateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: ""
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Подтверждение восстановления пароля
      tags:
      - recovery
  /auth/recovery/reset:
    put:
      consumes:
      - application/json
      description: Снимает штрафы по восстановлению
      parameters:
      - description: Данные для снятия штрафов по восстановлению
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/gitea.technodom.kz_intechno_techno-sso_internal_ports_http_resources_auth_v1.ResetRecoveryRequest'
      produces:
      - application/json
      responses:
        "200":
          description: ""
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Очищение объекта восстановления
      tags:
      - recovery
  /auth/refresh:
    post:
      consumes:
      - application/json
      description: Обновляет время жизни токена
      parameters:
      - description: Необходимые данные для обновления токена
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/api.RefreshRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.NewJWTTokenResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Рефреш токена
      tags:
      - auth
  /auth/signin/delegate:
    post:
      consumes:
      - application/json
      description: Начинает процедуру верификации номера телефона, отправляет код
        на указанный номер телефона
      parameters:
      - description: Необходимые данные для верификации
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/api.DelegateTokenRequest'
      produces:
      - application/json
      responses:
        "200":
          description: ""
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "429":
          description: Too Many Requests
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Верификация телефона для получения "доверительного (delegate) токена"
      tags:
      - verify
  /auth/signin/delegate/token:
    post:
      consumes:
      - application/json
      description: Проверяет пользовательский телефон и код из SMS и возвращает доверительный
        JWT токен
      parameters:
      - description: Необходимые данные для аутентификации и получения доверительного
          токена
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/api.SignInDelegateTokenRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.NewDelegateJWTTokenResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "412":
          description: Precondition Failed
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Создание доверительного токена
      tags:
      - auth
  /auth/signin/email:
    post:
      consumes:
      - application/json
      description: Проверяет пользовательский email и пароль, выписывает JWT токен
      parameters:
      - description: Необходимые данные для аутентификации
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/api.SignInByEmailRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.NewJWTTokenResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Вход по email
      tags:
      - auth
  /auth/signin/fast:
    post:
      consumes:
      - application/json
      description: Начинает процедуру верификации номера телефона для текущего TDID
        или номера телефона, с целью предоставления токенов для авторизации конечному
        юзеру
      parameters:
      - description: Необходимые данные для аутентификации, tdid опционален
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/api.SignInFastRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.SignInFastResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "429":
          description: Too Many Requests
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Быстрая аутентификация
      tags:
      - auth
  /auth/signin/fast/token:
    post:
      consumes:
      - application/json
      description: Завершает процедуру прохождения верификации номера телефона, сверяя
        токен валидации для быстрого входа
      parameters:
      - description: Необходимые данные для верификации, tdid опционален
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/api.SignInFastTokenRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.NewJWTTokenResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Верификация токена по быстрой аутентификации
      tags:
      - auth
  /auth/signin/phone:
    post:
      consumes:
      - application/json
      description: Проверяет пользовательский телефон и пароль, выписывает JWT токен
      parameters:
      - description: Необходимые данные для аутентификации
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/api.SignInByPhoneRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.NewJWTTokenResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "412":
          description: Precondition Failed
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Вход по телефону
      tags:
      - auth
  /auth/signout:
    delete:
      description: Успешный вызов удаляет представленный token в cookie.
      produces:
      - application/json
      responses:
        "200":
          description: ""
      security:
      - JWT: []
      summary: Завершает сессию пользователя, удаляя JWT токен.
      tags:
      - auth
  /auth/signup:
    put:
      consumes:
      - application/json
      description: Создает нового пользователя в SSO
      parameters:
      - description: Необходимые данные для регистрации
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/api.SignUPRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.SignUPResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Регистрация
      tags:
      - auth
  /auth/signup/fast:
    put:
      consumes:
      - application/json
      description: Создает нового пользователя в SSO
      parameters:
      - description: Необходимые данные для регистрации
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/api.SignUPFastRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.SignUPResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Быстрая регистрация
      tags:
      - auth
  /auth/token/validator:
    post:
      description: Проверяет токен на валидность по наличию cookie с токеном, подписи
        JWT токена, времени жизни JWT токена.
      produces:
      - application/json
      responses:
        "200":
          description: ""
      security:
      - JWT: []
      summary: Валидация токена
      tags:
      - token
  /auth/verify/phone:
    put:
      consumes:
      - application/json
      description: Начинает процедуру верификации номера телефона для указанного номера
        телефона
      parameters:
      - description: Необходимые данные для верификации, tdid опционален
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/api.VerifyPhoneRequest'
      produces:
      - application/json
      responses:
        "200":
          description: ""
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "429":
          description: Too Many Requests
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Верификация телефона
      tags:
      - verify
  /auth/verify/reset:
    put:
      consumes:
      - application/json
      description: Снимает штрафы по верификации
      parameters:
      - description: Данные для снятия штрафов
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/internal_ports_http_resources_auth_v1.ResetVerifyRequest'
      produces:
      - application/json
      responses:
        "200":
          description: ""
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Очищение объекта верификации
      tags:
      - verify
  /auth/verify/token:
    put:
      consumes:
      - application/json
      description: Завершает процедуру прохождения верификации номера телефона, сверяя
        токен валидации
      parameters:
      - description: Необходимые данные для верификации, tdid опционален
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/api.VerifyPhoneNumRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.NewJWTTokenResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Подтверждение верификации телефона
      tags:
      - verify
  /events/verify:
    get:
      description: 'Отдает token, status, phone по последней верификации. Статус успешной
        верификации - "finish", остальные: "new", "on_check", "validation_failed"'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/internal_ports_http_resources_events_v1.VerifyByTDIDResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - JWT: []
      summary: Последняя "бесконечная" верификация
      tags:
      - events
  /events/verify/phone:
    post:
      description: Запускает процесс "бесконечной" верификации
      parameters:
      - description: Телефон
        in: body
        name: phone
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: ""
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "429":
          description: Too Many Requests
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: '"Бесконечная" верификация'
      tags:
      - events
  /events/verify/token:
    put:
      consumes:
      - application/json
      description: Заканчивает процесс "бесконечной" верификации
      parameters:
      - description: СМС-код для подтверждения
        in: body
        name: token
        required: true
        schema:
          type: string
      - description: Телефон
        in: body
        name: phone
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.NewJWTTokenResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Завершение "бесконечной" верификации
      tags:
      - events
  /permissions/all:
    get:
      description: Отдает доступные пермишены всей системы
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/internal_ports_http_resources_permissions_v1.AllPermissionsResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - JWT: []
      summary: Список пермишеннов
      tags:
      - permissions
  /profile:
    get:
      description: Позволяет пользователю получить информацию о своем аккаунте со
        всеми правами и ролями
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.ProfileResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - JWT: []
      summary: Профиль
      tags:
      - profile
    put:
      consumes:
      - application/json
      description: Позволяет обновить данные по своему профилю
      parameters:
      - description: Обновленные данные профиля
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/api.ProfileUpdateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: ""
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - JWT: []
      summary: Изменение профиля
      tags:
      - profile
  /profile/addresses:
    get:
      description: Позволяет получить информацию об адресах всех получателей привязанных
        к пользователю
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/gitea.technodom.kz_intechno_techno-sso_internal_ports_http_resources_profile_v1.AddressesResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - JWT: []
      tags:
      - profile
  /profile/device:
    post:
      consumes:
      - application/json
      description: Позволяет добавить пользователю новый девайс
      parameters:
      - description: Данные по девайсу
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.Device'
      produces:
      - application/json
      responses:
        "200":
          description: ""
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - JWT: []
      summary: Новый девайс
      tags:
      - profile
  /profile/device/{token}:
    get:
      consumes:
      - application/json
      description: Позволяет добавить пользователю последний активный девайс
      produces:
      - application/json
      responses:
        "200":
          description: ""
        "204":
          description: No Content
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - JWT: []
      summary: Последний активный девайс
      tags:
      - profile
  /profile/kind:
    get:
      description: Позволяет пользователю получить тип своего профиля
      parameters:
      - description: Телефон
        in: query
        name: phone
        required: true
        type: string
      - description: email
        in: query
        name: email
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.ProfileTypeResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Тип профиля
      tags:
      - profile
  /profile/password:
    put:
      consumes:
      - application/json
      description: Позволяет обновить пользователю пароль
      parameters:
      - description: Новый пароль
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/api.UpdatePasswordRequest'
      produces:
      - application/json
      responses:
        "200":
          description: ""
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - JWT: []
      summary: Смена пароля
      tags:
      - profile
  /profile/phone:
    put:
      consumes:
      - application/json
      description: Позволяет добавить пользователю новый номер телефона
      parameters:
      - description: Новый телефонный номер
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/api.AddPhoneRequest'
      produces:
      - application/json
      responses:
        "200":
          description: ""
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "429":
          description: Too Many Requests
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - JWT: []
      summary: Добавление номера телефона
      tags:
      - profile
  /profile/private:
    get:
      description: Пишем пригласительный текст для пользователя с рабочим токеном
      produces:
      - application/json
      responses:
        "200":
          description: ""
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - JWT: []
      summary: Пригласительный текст
      tags:
      - profile
  /profile/receiver:
    post:
      consumes:
      - application/json
      description: Позволяет добавить пользователю "получателя"
      parameters:
      - description: Новый получатель
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/api.AddReceiverRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.AddReceiverResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - JWT: []
      summary: Новый получатель
      tags:
      - profile
  /profile/receiver/{id}:
    delete:
      description: Позволяет удалить пользователю "получателя"
      parameters:
      - description: id получателя
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ""
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - JWT: []
      summary: Удаление получателя
      tags:
      - profile
    put:
      consumes:
      - application/json
      description: Позволяет изменить "получателя"
      parameters:
      - description: id получателя
        in: path
        name: id
        required: true
        type: string
      - description: Обновленные данные получателя
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/api.UpdateReceiverRequest'
      produces:
      - application/json
      responses:
        "200":
          description: ""
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - JWT: []
      summary: Изменение получателя
      tags:
      - profile
  /profile/receivers:
    get:
      description: Позволяет получить информацию(кроме адреса) обо всех получателях
        привязанных к пользователю
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/gitea.technodom.kz_intechno_techno-sso_internal_ports_http_resources_profile_v1.ReceiversRequest'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - JWT: []
      tags:
      - profile
  /profile/type:
    get:
      description: Позволяет пользователю получить тип своего профиля
      parameters:
      - description: Идентификаторы
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/api.ProfileTypeRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.ProfileTypeResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Тип профиля [DEPRECATED]
      tags:
      - profile
  /profile/with-permissions:
    get:
      description: Позволяет пользователю получить информацию о своем аккаунте
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.ProfileResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - JWT: []
      summary: Профиль
      tags:
      - profile
swagger: "2.0"
